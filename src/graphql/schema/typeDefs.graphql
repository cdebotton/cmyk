# import Role from "./prisma.graphql"
# import UserWhereUniqueInput from "./prisma.graphql"
# import UserWhereInput from "./prisma.graphql"
# import UserUpdateInput from "./prisma.graphql"
# import UserCreateInput from "./prisma.graphql"
# import FileWhereInput from "./prisma.graphql"
# import DocumentCreateInput from "./prisma.graphql"
# import DocumentUpdateInput from "./prisma.graphql"
# import DocumentWhereInput from "./prisma.graphql"
# import DocumentWhereUniqueInput from "./prisma.graphql"
# import DocumentTypeWhereInput from "./prisma.graphql"
# import DocumentTypeWhereUniqueInput from "./prisma.graphql"
# import FileWhereUniqueInput from "./prisma.graphql"

scalar Upload
scalar Date

type Query {
  session: Session
  files(where: FileWhereInput): [File!]!
  user(where: UserWhereUniqueInput!): User
  users(where: UserWhereInput): [User!]!
  document(where: DocumentWhereUniqueInput!): Document
  documents(where: DocumentWhereInput): [Document!]!
  documentTypes(where: DocumentTypeWhereInput): [DocumentType!]!
  documentType(where: DocumentTypeWhereUniqueInput!): DocumentType
}

type Mutation {
  login(data: LoginInput!): String
  uploadFile(file: Upload!): File!
  deleteFile(where: FileWhereUniqueInput!): File
  createUser(data: UserCreateInput!): User!
  deleteUser(where: UserWhereUniqueInput!): User
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  createDocument(data: DocumentCreateInput!): Document!
  updateDocument(data: DocumentUpdateInput!, where: DocumentWhereUniqueInput!): Document
}

input LoginInput {
  email: String!
  password: String!
}

type Session {
  iat: Int!
  user: User!
}

type User {
  createdAt: Date!
  documents: [Document!]!
  email: String!
  id: ID!
  lastLogin: Date
  password: String!
  profile: Profile!
  role: Role!
  updatedAt: Date
}

type Profile {
  avatar: File
  createdAt: Date!
  dateOfBirth: Date
  firstName: String!
  id: ID!
  lastName: String!
  updatedAt: Date
  user: User!
}

type Document {
  author: User!
  createdAt: Date!
  id: ID!
  publishDate: Date!
  title: String!
  type: DocumentType!
  updatedAt: Date
}

type DocumentType {
  createdAt: Date!
  documents: [Document!]!
  id: ID!
  title: String!
  updatedAt: Date
}

type File {
  bucket: String!
  createdAt: Date!
  encoding: String!
  etag: String!
  id: ID!
  key: String!
  mimetype: String!
  size: Int!
  updatedAt: Date
  url: String!
}